{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/vincent/Documents/wrk/ayomi/the-auth/src/authentication/registration.js\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass RegistrationPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: null,\n      email: null,\n      password: null,\n      repeatPassword: null,\n      invalidLogin: false,\n      invalidRepeatPassword: false\n    };\n    console.log(props);\n    this.handleRegistration = this.handleRegistration.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleRegistration() {\n    const {\n      password,\n      repeatPassword\n    } = this.state;\n\n    if (password !== repeatPassword) {\n      this.setState({\n        invalidRepeatPassword: true\n      });\n    } else {\n      const {\n        invalidLogin,\n        invalidRepeatPassword,\n        ...requestBody\n      } = this.setState;\n      fetch(`http://0.0.0.0:8000/register`, {\n        method: \"POST\",\n        body: JSON.stringify(requestBody)\n      }).then(res => {\n        switch (res.status) {\n          case 200:\n            return res.json();\n\n          case 409:\n            this.setState({\n              invalidLogin: true\n            });\n        }\n      }).then(data => {\n        console.log(data); //token\n      });\n    }\n  }\n\n  handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"login\",\n          type: \"text\",\n          isInvalid: this.state.invalidLogin,\n          placeholder: \"Enter Login\",\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: [\"This login already exist, sorry \", this.state.login, \" #2\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"mail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"email\",\n          type: \"mail\",\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"password\",\n          type: \"password\",\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"repeatPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Repeat your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"password\",\n          type: \"password\",\n          isInvalid: this.state.invalidRepeatPassword,\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Password don't match, bothersome? I know.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.handleRegistration,\n        variant: \"danger\",\n        children: \" Neo! Register!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default RegistrationPanel;","map":{"version":3,"sources":["/home/vincent/Documents/wrk/ayomi/the-auth/src/authentication/registration.js"],"names":["React","Form","Button","RegistrationPanel","Component","constructor","props","state","login","email","password","repeatPassword","invalidLogin","invalidRepeatPassword","console","log","handleRegistration","bind","handleInputChange","setState","requestBody","fetch","method","body","JSON","stringify","then","res","status","json","data","event","name","value","target","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass RegistrationPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            login: null,\n            email: null,\n            password: null,\n            repeatPassword: null,\n\n            invalidLogin: false,\n            invalidRepeatPassword: false,\n        }\n\n        console.log(props);\n        this.handleRegistration = this.handleRegistration.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleRegistration() {\n        const {password, repeatPassword} = this.state;\n\n        if (password !== repeatPassword) {\n            this.setState({invalidRepeatPassword: true});\n        } else {\n            const {invalidLogin, invalidRepeatPassword, ...requestBody} = this.setState;\n            fetch(\n                `http://0.0.0.0:8000/register`, {\n                    method: \"POST\",\n                    body: JSON.stringify(requestBody)\n                }\n                ).then(\n                    res => {\n                        switch (res.status) {\n                            case 200:\n                                return res.json()\n                            case 409:\n                                this.setState({invalidLogin: true})\n                        }\n                    }\n                ).then(\n                    (data) => {\n                        console.log(data) //token\n                    }\n                )\n    \n        }\n    }\n\n    handleInputChange(event) {\n        const {name, value} = event.target;\n\n        this.setState({[name]: value});\n    }\n\n    render() {\n        return (\n            <Form>\n                <Form.Group controlId=\"login\">\n                    <Form.Label>Login</Form.Label>\n                    <Form.Control name='login' type=\"text\" isInvalid={this.state.invalidLogin} placeholder=\"Enter Login\" onChange={this.handleInputChange} />\n                    <Form.Control.Feedback type='invalid'>This login already exist, sorry {this.state.login} #2</Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group controlId=\"mail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control name='email' type=\"mail\" onChange={this.handleInputChange}/>\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control name='password' type=\"password\" onChange={this.handleInputChange}/>\n                </Form.Group>\n\n                <Form.Group controlId=\"repeatPassword\">\n                    <Form.Label>Repeat your Password</Form.Label>\n                    <Form.Control name='password' type=\"password\" isInvalid={this.state.invalidRepeatPassword} onChange={this.handleInputChange}/>\n                    <Form.Control.Feedback type='invalid'>Password don't match, bothersome? I know.</Form.Control.Feedback>\n                </Form.Group>\n\n                <Button onClick={this.handleRegistration} variant='danger'> Neo! Register!</Button>\n            </Form>\n        );\n    }\n}\n\nexport default RegistrationPanel;"]},"metadata":{},"sourceType":"module"}